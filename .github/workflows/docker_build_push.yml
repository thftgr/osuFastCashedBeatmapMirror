name: Docker Image CI

on:
  push:
    branches:
      - 'release'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: nerinyan-apiv2
  REPOSITORY_OWNER: nerinyan
  PLATFORMS: linux/amd64 #,linux/arm64
  
jobs:
  build_and_push:
    runs-on: ubuntu-latest


    steps:
      - name: Checkout repository
        uses: actions/checkout@v3.5.2
        
      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.20.3'

      - name: build
        run: |
            #ls -al /etc/ssl/certs/
            cp /etc/ssl/certs/ca-certificates.crt .
            go mod download
            IFS=',' read -ra PLATFORMS <<< "${{ env.PLATFORMS }}"
            CGO_ENABLED=0
            for platform in "${PLATFORMS[@]}"; do
              platform="${platform#"${platform%%[![:space:]]*}"}"
              platform="${platform%"${platform##*[![:space:]]}"}"
              
              
              GOARCH=$(echo "$platform" | cut -d '/' -f 2)
              GOOS=$(echo "$platform" | cut -d '/' -f 1)
              echo build start CGO_ENABLED=$CGO_ENABLED go build -a -ldflags="-s -w" -o ./app-${GOOS}-${GOARCH}
              CGO_ENABLED=0 go build -a -ldflags="-s -w" -o ./app-${GOOS}-${GOARCH}
              echo build end ./app-${GOOS}-${GOARCH}
              #ldd ./app-${GOOS}-${GOARCH} || true
            done
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2.5.0
      
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2.1.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Build and push Docker image
        uses: docker/build-push-action@v4.0.0
        with:
          context: .
          platforms: ${{ env.PLATFORMS }}
          file: ./Dockerfile
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.REPOSITORY_OWNER }}/${{ env.IMAGE_NAME }}:latest 
            ${{ env.REGISTRY }}/${{ env.REPOSITORY_OWNER }}/${{ env.IMAGE_NAME }}:${{github.run_number}}

